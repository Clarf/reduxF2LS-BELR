###############################################################################
# Once this script has been properly edited, it can be run by copying and     #
# pasting each command into a PyRAF session.                                  #
#                                                                             #
###############################################################################

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#  Things to edit for each new observation
#
# - RENAME THE FILE, and put in target_name/science directory.
#
# - Observation UT date in top comment
# - Data filename prefix in top comment
# - File numbers in top comment
# - Filter, grism, slit width, and exposure times in top comment
# - Name of telluric in top comment
#
# - The "HK005918" string throughout the script to match your source name.
# - The data filename prefix in the gemlist section
# - The file numbers in the gemlist section.
# Note the "gemlist" section is where the input file lists are created.
#
# - If the science darks are being used for the arcs as well, select
#   the appropriate concat statement locate just below the gemlist section.
#	Instructions included there.
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

# The data files have been separated by filter and exposure time, where
# appropriate. This information can be found in the primary header unit (PHU)
# of each data file. The imhead or fitsutil.fxhead tasks can be used to view
# the header information in the PHU (or any other extension) of the data file. 
# The hselect task can be used to obtain specific keyword values from the
# headers. Read the help files for these tasks for more information.
#
# Science Dataset:
#
# Observation UT date : 2013 Oct 26, *2013 Oct 24
# Data filename prefix: S20131026S, *S20131024S
# File numbers:
#      Science                    : 681-684 (HK, HK, 2pix-slit, 90s)
#      Darks for science          : 797-803 (90s)
#      Flat                       : 686     (HK, HK, 2pix-slit, 4s)
#      Darks for flat             : *032-037 (4s)
#      Arc                        : 685     (HK, HK, 2pix-slit, 90s)
#      Darks for arc              : 797-803 (90s)
#
# Telluric Dataset:
#
# Observation UT date : 2013 Oct 26, *2013 Oct 24, **2013 Oct 25
# Data filename prefix: S20131026S, *S20131024S, **S20131025S
# File numbers:
#      Telluric (HIP 1378)        : 699-702 (HK, HK, 2pix-slit, 30s)
#      Darks for telluric         : **401-406 (30s)
#      Flat                       : 686     (HK, HK, 2pix-slit, 4s)
#      Darks for flat             : *032-037 (4s)
#      Arc                        : 685     (HK, HK, 2pix-slit, 90s)
#      Darks for arc              : 797-803 (90s)

###############################################################################
# STEP 1: Initialize the required packages                                    #
###############################################################################

# Load the required packages
gemini
f2

# Import the required packages
from pyraf.iraf import gemini
from pyraf.iraf import f2

# Use the default parameters except where specified on command lines below
print ("\nHK005918: Unlearning tasks")
unlearn ("gemini")
unlearn ("f2")
unlearn ("gnirs")
unlearn ("gemtools")

###############################################################################
# STEP 2: Define any variables, the database and the logfile                  #
###############################################################################


# Define the logfile
f2.logfile = "HK005918.log"

# To start from scratch, delete the existing logfile
printf ("HK005918: Deleting %s\n", f2.logfile)
delete (f2.logfile, verify=no)

# Define the database directory
f2.database = "HK005918_database/"

# To start from scratch, delete the existing database files

if (iraf.access(f2.database)):
	print "HK005918: Deleting contents of %s" % (f2.database)
	iraf.delete (f2.database + "*", verify=no)


# Define the directory where the raw data is located
# Don't forget the trailing slash!
rawdir = "../../../raw/"
printf ("HK005918: Raw data is located in %s\n", rawdir)

# Load the header keywords for F2
nsheaders ("f2", logfile=f2.logfile)

# Set the display
set stdimage=imt2048

###############################################################################
# STEP 3: Create the reduction lists                                          #
###############################################################################

delete ("flat.lis,flatdark.lis,arc.lis,arcdark.lis,obj.lis,objdark.lis,\
tel.lis,teldark.lis,all.lis", verify=no)

# The user should edit the parameter values in the gemlist calls below to match
# their own dataset.
print ("HK005918: Creating the reduction lists")
gemlist "S20131026S" "686"      > "flat.lis"
gemlist "S20131024S" "032-037" > "flatdark.lis"
gemlist "S20131026S" "685"     > "arc.lis"
gemlist "S20131026S" "797-803" > "arcdark.lis"
gemlist "S20131026S" "681-684" > "obj.lis"
gemlist "S20131026S" "797-803" > "objdark.lis"
gemlist "S20131026S" "699-702"   > "tel.lis"
gemlist "S20131025S" "401-406"     > "teldark.lis"

# Use the first if the arcdarks and objdarks are all different
# If they are the same use the second version of concat
# (There's a problem in f2prepare that makes it barf if there
#  are duplicates.)

#  CAREFUL HERE
# If no duplicate darks, use this:
#concat ("flat.lis,flatdark.lis,arc.lis,arcdark.lis,obj.lis,objdark.lis,\
#tel.lis,teldark.lis", "all.lis")

# If there are duplicate, use this instead.
concat ("flat.lis,flatdark.lis,arc.lis,obj.lis,objdark.lis,\
tel.lis,teldark.lis", "all.lis")


###############################################################################
# STEP 4: Visually inspect the data                                           #
###############################################################################

# Visually inspect all the data. In addition, all data should be visually
# inspected after every processing step. Once the data has been prepared, it is
# recommended to use the syntax [EXTNAME,EXTVER] e.g., [SCI,1], when defining
# the extension.

# Please make sure a display tool (e.g., ds9, ximtool) is already open.

file = open("all.lis", "r")
for line in file:
	image = line.strip() + "[1]"
	iraf.display(rawdir + image, 1)
	iraf.sleep(5)

file.close()


###############################################################################
# STEP 5: f2prepare all the data                                              #
###############################################################################

# Run F2PREPARE on all the data to update the headers, derive variance and data
# quality (DQ) planes, correct for non-linearity (not yet implemented) and flag
# saturated and non-linear pixels in the DQ plane.

imdelete ("f@all.lis", verify=no)
f2prepare ("@all.lis", rawpath=rawdir, fl_vardq=yes, fl_correct=yes, \
    fl_saturated=yes, fl_nonlinear=yes)

###############################################################################
# STEP 6: Create the necessary dark images                                    #
###############################################################################

delete ("fflatdark.lis", verify=no)
imdelete ("flatdark.fits", verify=no)
sections "f@flatdark.lis" > "fflatdark.lis"
gemcombine ("@fflatdark.lis", "flatdark.fits", combine="average", \
    fl_vardq=yes, logfile=f2.logfile)

delete ("farcdark.lis", verify=no)
imdelete ("arcdark.fits", verify=no)
sections "f@arcdark.lis" > "farcdark.lis"
gemcombine ("@farcdark.lis", "arcdark.fits", combine="average", fl_vardq=yes, \
    logfile=f2.logfile)

delete ("fobjdark.lis", verify=no)
imdelete ("objdark.fits", verify=no)
sections "f@objdark.lis" > "fobjdark.lis"
gemcombine ("@fobjdark.lis", "objdark.fits", combine="average", fl_vardq=yes, \
    logfile=f2.logfile)

delete ("fteldark.lis", verify=no)
imdelete ("teldark.fits", verify=no)
sections "f@teldark.lis" > "fteldark.lis"
gemcombine ("@fteldark.lis", "teldark.fits", combine="average", fl_vardq=yes, \
    logfile=f2.logfile)

###############################################################################
# STEP 7: Create the normalised flat field and BPM                            #
###############################################################################

# Subtract the dark from the flat images prior to cutting.

imdelete ("df@flat.lis", verify=no)

file = open("flat.lis", "r")
for line in file:
	image = line.strip()
	iraf.gemarith ("f" + image, "-", "flatdark.fits", "df" + image, \
		fl_vardq=yes, logfile=f2.logfile)

file.close()


imdelete ("cdf@flat.lis", verify=no)
f2cut ("df@flat.lis")

# Construct the normalised flat field. The flats are derived from images taken 
# with the calibration unit (GCAL) shutter open ("lamps-on"). It is recommended
# to run nsflat interactively.

imdelete ("flat.fits,f2_ls_bpm.pl", verify=no)
nsflat ("cdf@flat.lis", flatfile="flat.fits", bpmfile="f2_ls_bpm.pl", \
    thr_flo=0.35, thr_fup=3.0, fl_inter=yes, order=120)

###############################################################################
# STEP 8: Reduce the arc and determine the wavelength solution                #
###############################################################################

# The quality of the fit of the wavelength solution is improved when the arcs 
# are flat fielded. For example, for this dataset, when the arc is flat
# fielded, 3 lines are rejected from the fit and the rms = 0.05576 Angstroms,
# but when the arc is not flat fielded, no lines are rejected, but the rms =
# 0.1855 Angstroms. 

# Subtract the dark from the arc images prior to cutting and flat dividing.

imdelete ("df@arc.lis", verify=no)
nsreduce ("f@arc.lis", outprefix="d", fl_cut=no, fl_process_cut=no, \
    fl_dark=yes, darkimage="arcdark.fits", fl_sky=no, fl_flat=no)

# Cut the arc images and divide by the normalised flat field image.

imdelete ("rdf@arc.lis", verify=no)
nsreduce ("df@arc.lis", fl_cut=yes, fl_dark=no, fl_sky=no, fl_flat=yes, \
    flatimage="flat.fits")

# Combine the arc files (if there is more than one arc file)

imdelete ("arc.fits", verify=no)
delete ("rdfarc.lis", verify=no)
sections "rdf@arc.lis//.fits" > "rdfarc.lis"

count = 0
file = open("arc.lis", "r")
for line in file:
	count += 1

if count == 1:
	iraf.copy ("@rdfarc.lis", "arc.fits")
else:
	iraf.gemcombine ("@rdfarc.lis", "arc.fits", fl_vardq=yes)

file.close()


# Now determine the wavelength solution. It is recommended to run nswavelength
# interactively. The default settings work well for most filter / grism
# combinations. However, for Y band data, the following additional parameters
# should be set: threshold=50, nfound=3, nsum=1.

imdelete ("warc.fits", verify=no)
nswavelength ("arc.fits", fl_inter=yes)

#----------------------
# Test recovery of a calibrated arc
imdelete ("farc.fits", verify=no)
nsfitcoords ("arc.fits", lamptransf="warc.fits", fl_inter=yes)
# Note down the xorder and yorder needed for a good fit.  Use
# that wheneven warc.fits is used by nsfitcoords.
# xorder=3, yorder=6

imdelete ("tfarc.fits", verify=no)
nstransform ("farc.fits")
display ("tfarc.fits[sci,1]", 1)

splot ("tfarc.fits[sci,1]", line=928)
# 928 is where the telluric spectrum falls
# set :nsum 30
# Check that the arc lines are at the correct wavelength.
# Use 'k' on each side of a line to get the centroid.  Then
# compare with line lists and diagrams. 
#	http://www.gemini.edu/sciops/instruments/niri/?q=node/10166
#   The NIRI plots work well but they are a mirror image of your
#   transformed arc.  still all the info you need is there.
#
# KL: The arc gets transformed correctly.  The lines are within
#     1-2 Angstroms.  Note that the shape of the lines is not
#	  symetric.  No idea why, but it surely affects centering.
#-----------------------

###############################################################################
# STEP 9: Reduce the telluric data                                            #
###############################################################################

# Subtract the dark from the telluric images prior to cutting and flat
# dividing.

imdelete ("df@tel.lis", verify=no)
nsreduce ("f@tel.lis", outprefix="d", fl_cut=no, fl_process_cut=no, \
    fl_dark=yes, darkimage="teldark.fits", fl_sky=no, fl_flat=no)

imdelete ("rdf@tel.lis", verify=no)
nsreduce ("df@tel.lis", fl_cut=yes, fl_dark=no, fl_sky=yes, fl_flat=yes, \
    flatimage="flat.fits")

###############################################################################
# STEP 10: Combine the telluric data                                          #
###############################################################################

imdelete ("tel_comb.fits", verify=no)
nscombine ("rdf@tel.lis", output="tel_comb.fits", fl_shiftint=no, fl_cross=yes)

display ("tel_comb.fits[SCI,1]", 1)

###############################################################################
# STEP 11: Wavelength calibrate the telluric data                             #
###############################################################################

# The nsfitcoords task is used to determine the final solution (consisting of
# the wavelength solution) to be applied to the data. The nstransform task is
# used to apply this final solution. nsfitcoords is best run interactively.

# IMPORTANT: be sure to apply the same solution for the telluric and the
#            science data. 

# Spatial rectification (s-distortion correction) is not usually needed with 
# F2 longslit data. If it is desired, first call nssdist.

imdelete ("ftel_comb.fits", verify=no)
nsfitcoords ("tel_comb.fits", lamptransf="warc.fits", lxorder=3, lyorder=6)

imdelete ("tftel_comb.fits", verify=no)
nstransform ("ftel_comb.fits")
display ("tftel_comb[sci,1]", 1)

#--------------------
# Check that the hydrogen lines fall where they are supposed to be.
splot ("tftel_comb[sci,1]", line=928)
# 928 is where the telluric falls
# :nsum 30
# Use 'k' on each side of a line to centroid.
# Compare with atomic line position.
#
# KL:  *** The lines do NOT match the atomic list! ***
#---------------------

#---------------------
# Troubleshooting.  -> Check the position of the sky lines.
#
# dark and flat, without sky correction of one telluric dataset.
imdelete ("XdfS20131026S0699", verify=no)
nsreduce ("dfS20131026S0699", outprefix='X', fl_cut=yes, fl_dark=no, fl_sky=no, 
	fl_flat=yes, flatimage="flat.fits")
display ("XdfS20131026S0699[sci,1]", 1)
#
# apply wavecal solution
imdelete ("fXdfS20131026S0699", verify=no)
nsfitcoords ("XdfS20131026S0699", lamptransf="warc.fits", lxorder=3, lyorder=6)

imdelete ("tfXdfS20131026S0699", verify=no)
nstransform ("fXdfS20131026S0699")
display ("tfXdfS20131026S0699[sci,1]", 1)

splot ("tfXdfS20131026S0699[sci,1]", line=750)
# :nsum 30
# Use 'k' again and sky line plots and lists to check position
#  of the sky lines.
# Resources: http://www.jach.hawaii.edu/UKIRT/astronomy/calib/spec_cal/oh.html
#			 http://www.jach.hawaii.edu/UKIRT/astronomy/calib/spec_cal/ohlines.html
#
# KL: checked in the H-band and the K-band.  There is a *constant* wavelength
#     shift of +11 Angstrom +/- 0.5 compared to the OH line list.
#	  => the slit has moved.
#	  Now check the hydrogen lines again, this time carefully.  Can we see the
#	  same 11 Angstrom shift?
#
#	  Hydrogen lines.  Some do show 11 A, others 19, 15, 10, 9.  Those
#	  are absorption lines though and are rather broad.
#
#	  Since the OH emission lines clearly indicate a 11 A offset, we go 
#	  with that.
#
# SOLUTIONS:
#   Option 1) Go to the fitcoords solution and subtract 11 A from the
#			  translation coefficient.  (Seems to work fine, the hydrogen
#			  lines show up at the correct wavelength +/- 1-2 Angs.)
#	Option 2) Forget the arc, derive a new solution from the sky lines.
#			  Might be more kosher, but that means more fiddling and the
#			  DR procedure needs to be changed and documented.
#--------------------

#--------------------
# Trying out Option 2
imdelete ("wXdfS20131026S0699.fits", verify=no)
nswavelength ("XdfS20131026S0699.fits", 
			  coordlist="gemini$gcal/linelists/ohlines.dat", 
			  fl_inter=yes)
imdelete ("Xtel_comb.fits", verify=no)
nsfitcoords ("tel_comb.fits", lamptransf="wXdfS20131026S0699.fits", 
		outprefix="X", fl_inter=yes, lxorder=3, lyorder=6)

imdelete ("tXtel_comb.fits", verify=no)
nstransform ("Xtel_comb.fits")
imdelete ("xtXtel_comb.fits", verify=no)
nsextract ("tXtel_comb.fits", fl_apall=yes, fl_findneg=no, fl_inter=yes, \
    fl_trace=yes)

splot ("xtXtel_comb.fits[SCI,1]")

# KL:  That works really well, and without much fuss.
# KL:  I'm almost tempted to use sky lines for the science too.
# KL:  The left and right edges don't get much coverage though.
# KL:  But do we have anything of value there?  I don't think so.



###############################################################################
# STEP 12: Extract the telluric spectrum                                      #
###############################################################################

imdelete ("xtftel_comb.fits", verify=no)
nsextract ("tftel_comb.fits", fl_apall=yes, fl_findneg=no, fl_inter=yes, \
    fl_trace=yes)

splot ("xtftel_comb.fits[SCI,1]")

# Before running the steps below, examine xtftel_comb for stellar features
# (refer to H-series). Keep the above plot open (i.e. don’t ‘q’).
# Probable stellar features at ~(Å): 15193[1], 15556[2], 15703[3], 15876[4], 
# 16109[5], 16407[6], 16806[7], 17362[8], 21668 [clean]

# KL: not correcting for 15192, 15261, 15342, 15439
# KL: starting with the big, clean lines
# KL: 21655[1], 17362[2], 16807[3], 16407[4], 16109[5], 15881[6], 
#	15701[7], 15557[clean] 
# KL: [1] fit 1097 to 1197
# KL: [2] fit 569 to 625
# KL: [3] fit 509 to 541
# KL: [4] fit 461 to 490
# KL: [5] fit 413 to 473
# KL: [6] fit 392 to 413 (little bumps on both sides)
# KL: [7] fit 366 to 397 (best I can do)
# KL: [clean] fit 349 to 371

# Remove stellar absorption features in telluric through rmfeature in a second
# terminal.
# [IN A SECOND TERMINAL:]

rmfeature xtftel_comb.fits tel_temp1.fits

# Continue replacing tel_tempN until all features removed, naming the final
# file tel_clean.fits (where N is number of iterative correction).

rmfeature tel_temp*N.fits tel_temp**N.fits
# An error is a reminder to replace the Ns in file names above!

rmfeature tel_temp8.fits tel_clean.fits

###############################################################################
# STEP 13: Reduce the science data                                            #
###############################################################################

# Subtract the dark from the science images prior to cutting and flat dividing.

imdelete ("df@obj.lis", verify=no)
nsreduce ("f@obj.lis", outprefix="d", fl_cut=no, fl_process_cut=no, \
    fl_dark=yes, darkimage="objdark.fits", fl_sky=no, fl_flat=no)

imdelete ("rdf@obj.lis", verify=no)
nsreduce ("df@obj.lis", fl_cut=yes, fl_dark=no, fl_sky=yes, fl_flat=yes, \
    flatimage="flat.fits")

###############################################################################
# STEP 14: Combine the science data                                           #
###############################################################################

imdelete ("obj_comb.fits", verify=no)
nscombine ("rdf@obj.lis", output="obj_comb.fits", fl_shiftint=no, \
fl_cross=no, rejtype="none")
#    fl_cross=yes, rejtype="minmax")   # KL, that doesn't work for faint targets


display ("obj_comb.fits[SCI,1]", 1)

###############################################################################
# STEP 15: Wavelength calibrate the science data                              #
###############################################################################

# The nsfitcoords task is used to determine the final solution (consisting of
# the wavelength solution) to be applied to the data. The nstransform task is
# used to apply this final solution. nsfitcoords is best run interactively.

# IMPORTANT: be sure to apply the same solution for the telluric and the
#            science data. 

# Spatial rectification (s-distortion correction) is not usually needed with 
# F2 longslit data. If it is desired, first call nssdist.

imdelete ("fobj_comb.fits", verify=no)
nsfitcoords ("obj_comb.fits", lamptransf="warc.fits")

imdelete ("tfobj_comb.fits", verify=no)
nstransform ("fobj_comb.fits")

#---------------------
# Troubleshooting.  -> Check the position of the sky lines.
#
# dark and flat, without sky correction of one telluric dataset.
imdelete ("XdfS20131026S0681", verify=no)
nsreduce ("dfS20131026S0681", outprefix='X', fl_cut=yes, fl_dark=no, fl_sky=no, 
	fl_flat=yes, flatimage="flat.fits")
display ("XdfS20131026S0681[sci,1]", 1)
#
# apply wavecal solution
imdelete ("fXdfS20131026S0681", verify=no)
nsfitcoords ("XdfS20131026S0681", lamptransf="warc.fits", lxorder=3, lyorder=6)

imdelete ("tfXdfS20131026S0681", verify=no)
nstransform ("fXdfS20131026S0681")
display ("tfXdfS20131026S0681[sci,1]", 1)

splot ("tfXdfS20131026S0681[sci,1]", line=750)
# :nsum 30
# Use 'k' again and sky line plots and lists to check position
#  of the sky lines.
# Resources: http://www.jach.hawaii.edu/UKIRT/astronomy/calib/spec_cal/oh.html
#			 http://www.jach.hawaii.edu/UKIRT/astronomy/calib/spec_cal/ohlines.html
#
# KL: checked in the H-band and the K-band.  The OH lines show up
#	  where they are supposed to show within 1-2 Angstrom, like the arc.
#	  This was expected given that the arc was taken right after the
#	  science observations.
#--------------------



###############################################################################
# STEP 16: Extract the science spectrum                                       #
###############################################################################

# For faint science spectra, the telluric can be used as a reference when
# extracting the science spectra; set trace=tftel_comb.fits.

display ("tfobj_comb.fits[sci,1]", 1)
#947
imdelete ("xtfobj_comb.fits", verify=no)
nsextract ("tfobj_comb.fits", fl_apall=yes, fl_findneg=no, fl_inter=yes, \
    fl_trace=yes)

splot ("xtfobj_comb.fits[SCI,1]")

###############################################################################
# STEP 17: Apply the telluric correction to the science spectrum              #
###############################################################################

# Note that if this telluric has not been corrected to remove intrinsic stellar
# features; this will leave false emission features in the final spectrum.
#
# Second note: yes it has - see Step 12
#	KL: The features are fit with a Voight profile and removed.
#	KL: It might be worth exploring using the spectrum of a B9V 
#	KL: (or close to that) to remove the features.  (Would need
#	KL: resampling of the model, scaling to telluric, then subtracting.)
#	KL: I do not have the software ready to do that.
#   KL: Remember to use tel_clean as the telluric, not xtftel_comb.

imdelete ("axtfobj_comb.fits", verify=no)
#nstelluric ("xtfobj_comb.fits", "xtftel_comb", fitorder=12, threshold=0.01, \
#    fl_inter=yes)
nstelluric ("xtfobj_comb.fits", "tel_clean", fitorder=12, threshold=0.01, \
    fl_inter=yes)

# order for telluric = 5, order for science = 5
#   with sampling only where the flux is not affected.
# scale, shift = 1.0, 0.0

splot ("axtfobj_comb.fits[SCI,1]", ymin=-200, ymax=1000)
#
#specplot ("xtfobj_comb.fits[sci,1],axtfobj_comb.fits[sci,1],\
#    xtftel_comb.fits[sci,1]", fraction=0.05, yscale=yes, ymin=-100, ymax=4000)
specplot ("xtfobj_comb.fits[sci,1],axtfobj_comb.fits[sci,1],\
    tel_clean.fits[sci,1]", fraction=0.05, yscale=yes, ymin=-100, ymax=4000)

# KL: Remove left over 2D spectrum WCS info (nsextract doesn't
# KL: do the job correctly.)
hedit ("axtfobj_comb.fits[sci,1]","CD2_2", delete=yes,verify=no,update=yes)
hedit ("axtfobj_comb.fits[sci,1]","CTYPE2", delete=yes,verify=no,update=yes)
hedit ("axtfobj_comb.fits[sci,1]","LTM2_2", delete=yes,verify=no,update=yes)
hedit ("axtfobj_comb.fits[var,1]","CD2_2", delete=yes,verify=no,update=yes)
hedit ("axtfobj_comb.fits[var,1]","CTYPE2", delete=yes,verify=no,update=yes)
hedit ("axtfobj_comb.fits[var,1]","LTM2_2", delete=yes,verify=no,update=yes)

# In another window, a shell, use the splot tool in utils
# You'll need to add the utils directory to PYTHONPATH and PATH.
splot axtfobj_comb.fits -l quasar -z 0.6128 -y -250 750 --variance 2

###############################################################################
# STEP 18: Tidy up                                                            #
###############################################################################

#  KL:  I usually keep the files to keep track of what's what when I need to
#		investigate further.
#delete ("flat.lis,flatdark.lis,fflatdark.lis,arc.lis,arcdark.lis,farcdark.lis,\
#rdfarc.lis,obj.lis,objdark.lis,fobjdark.lis,tel.lis,teldark.lis,fteldark.lis,\
#all.lis", verify=no)

###############################################################################
# Finished!                                                                   #
###############################################################################
